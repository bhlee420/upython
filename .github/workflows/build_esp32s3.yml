name: ESP32S3

# run
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
# add something
on:
  push:
  pull_request:
    paths:
      - ".github/workflows/build_esp32s3.yml"
      - "micropython-modules/microlite/**"
      - "micropython-modules/micropython-camera-driver/**"
      

jobs:
  tensorflow_micropython_esp32s3_build: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ESP32S3-MICROLITE SPIRAM - 8MB Flash New
        run: |
          source ./scripts/build.sh && prepare_dependencies
          echo "CODECONTENTS=$(cat ./dependencies/micropython/tools/ci.sh)"
          source ./dependencies/micropython/tools/ci.sh && ci_esp32_idf50_setup
          echo "Setup idf"
          pwd
          
          # source ./scripts/build.sh && build_esp32 "MICROLITE_S3_SPIRAM"
          # TARGET=$(pwd)/dependencies/micropython/ports/esp32
          # ./scripts/assemble-unified-image-esp.sh $TARGET "MICROLITE_S3_SPIRAM"
          # echo "After assembling"
          # pwd
          # ls $TARGET/build-MICROLITE_S3_SPIRAM

          source ./scripts/build.sh && build_esp32 "MICROLITE_SPIRAM_CAM"
          MPY_PATH=$(pwd)/dependencies/micropython/ports/esp32
          TARGET=$(pwd)/boards/esp32
          
          ./scripts/assemble-unified-image-esp.sh $MPY_PATH $TARGET "MICROLITE_SPIRAM_CAM/build"
          echo "After assembling CAM"
          pwd
          # ls $TARGET/build-MICROLITE_SPIRAM_CAM
          
          # compress and save /build as archive
          cd $(pwd)/boards/esp32/MICROLITE_SPIRAM_CAM
          tar czvf build.tar.gz build

          
          echo "---------------Build DIR---------------"
          
          ls build

          
        
        shell: bash

      #- name: Archive ESP32-MICROLITE with SPIRAM - 8 MB Flash firmware
      #uses: actions/upload-artifact@v3
        #with:
          #name: microlite-esp32s3-firmware
          #path: /home/runner/work/upython/upython/dependencies/micropython/ports/esp32/build-MICROLITE_S3_SPIRAM/firmware.bin

      - name: build folder DOWNLOAD
        uses: actions/upload-artifact@v3
        with:
          name: build-folder
          path: /home/runner/work/upython/upython/boards/esp32/MICROLITE_SPIRAM_CAM/build.tar.gz

      
      - name: Archive ESP32-MICROLITE with SPIRAM - 8 MB Flash firmware with CAM
        uses: actions/upload-artifact@v3
        with:
          name: microlite-esp32s3_CAM-firmware
          path: /home/runner/work/upython/upython/boards/esp32/MICROLITE_SPIRAM_CAM/build/firmware.bin
    
